From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anthony Ramine <nox@nox.paris>
Date: Tue, 7 Jan 2020 12:48:09 +0100
Subject: [PATCH] Introduce RUST_SYSROOT


diff --git a/build/moz.configure/rust.configure b/build/moz.configure/rust.configure
index 158ac634c9aa..eebfda04a858 100644
--- a/build/moz.configure/rust.configure
+++ b/build/moz.configure/rust.configure
@@ -17,6 +17,12 @@ cargo = check_prog('_CARGO', ['cargo'], what='cargo',
                    paths=toolchain_search_path, input='CARGO',
                    allow_missing=True)
 
+option(env='RUST_SYSROOT', nargs=1, help='Path to the rustc sysroot')
+
+@depends('RUST_SYSROOT')
+def rust_sysroot(value):
+    if value:
+        return value[0]
 
 @template
 def unwrap_rustup(prog, name):
@@ -176,7 +182,7 @@ def rust_triple_alias(host_or_target, host_or_target_c_compiler):
     host_or_target_str = {host: 'host', target: 'target'}[host_or_target]
 
     @depends(rustc, host_or_target, host_or_target_c_compiler,
-             rust_supported_targets, arm_target, when=rust_compiler)
+             rust_supported_targets, arm_target, rust_sysroot, when=rust_compiler)
     @checking('for rust %s triplet' % host_or_target_str)
     @imports('os')
     @imports(_from='mozbuild.configure.util', _import='LineIO')
@@ -184,7 +190,7 @@ def rust_triple_alias(host_or_target, host_or_target_c_compiler):
     @imports(_from='tempfile', _import='mkstemp')
     @imports(_from='textwrap', _import='dedent')
     def rust_target(rustc, host_or_target, compiler_info,
-                    rust_supported_targets, arm_target):
+                    rust_supported_targets, arm_target, rust_sysroot):
         # Rust's --target options are similar to, but not exactly the same
         # as, the autoconf-derived targets we use.  An example would be that
         # Rust uses distinct target triples for targetting the GNU C++ ABI
@@ -325,6 +331,8 @@ def rust_triple_alias(host_or_target, host_or_target_c_compiler):
                 '-o', out_path,
                 in_path,
             ]
+            if rust_sysroot:
+                cmd += ['--sysroot', rust_sysroot]
 
             def failed():
                 die(dedent('''\
@@ -354,6 +362,8 @@ rust_host_triple = rust_triple_alias(host, host_c_compiler)
 @depends(host, rust_host_triple, rustc_info.host)
 def validate_rust_host_triple(host, rust_host, rustc_host):
     if rust_host != rustc_host:
+        if host.machine == 'uwp' and rustc_host.machine == 'pc':
+            return
         if host.alias == rust_host:
             configure_host = host.alias
         else:
@@ -397,6 +407,8 @@ def rustc_natvis_ldflags(target, compiler_info, rustc):
     if target.kernel == 'WINNT' and compiler_info.type == 'clang-cl':
         sysroot = check_cmd_output(rustc, '--print', 'sysroot').strip()
         etc = os.path.join(sysroot, 'lib/rustlib/etc')
+        if not os.path.exists(etc):
+            return []
         ldflags = []
         for f in os.listdir(etc):
             if f.endswith('.natvis'):
