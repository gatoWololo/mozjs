From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anthony Ramine <nox@nox.paris>
Date: Mon, 28 Oct 2019 23:08:58 +0100
Subject: [PATCH] Remove cargo version check

It causes issues when the configure script is invoked through RLS.

diff --git a/build/moz.configure/rust.configure b/build/moz.configure/rust.configure
index 43a399bf3b1e..158ac634c9aa 100644
--- a/build/moz.configure/rust.configure
+++ b/build/moz.configure/rust.configure
@@ -100,34 +100,10 @@ def rustc_info(rustc):
 
 set_config('RUSTC_VERSION', depends(rustc_info)(lambda info: str(info.version)))
 
-@depends_if(cargo)
-@checking('cargo version', lambda info: info.version)
-@imports('re')
-def cargo_info(cargo):
-    out = check_cmd_output(cargo, '--version', '--verbose').splitlines()
-    info = dict((s.strip() for s in line.split(':', 1)) for line in out[1:])
-    version = info.get('release')
-    # Older versions of cargo didn't support --verbose, in which case, they
-    # only output a not-really-pleasant-to-parse output. Fortunately, they
-    # don't error out, so we can just try some regexp matching on the output
-    # we already got.
-    if version is None:
-        VERSION_FORMAT = r'^cargo (\d\.\d+\.\d+).*'
-
-        m = re.search(VERSION_FORMAT, out[0])
-        # Fail fast if cargo changes its output on us.
-        if not m:
-            die('Could not determine cargo version from output: %s', out)
-        version = m.group(1)
-
-    return namespace(
-        version=Version(version),
-    )
 
-
-@depends(rustc_info, cargo_info, build_project)
+@depends(rustc_info, build_project)
 @imports(_from='textwrap', _import='dedent')
-def rust_compiler(rustc_info, cargo_info, build_project):
+def rust_compiler(rustc_info, build_project):
     if not rustc_info:
         die(dedent('''\
         Rust compiler not found.
@@ -159,27 +135,6 @@ def rust_compiler(rustc_info, cargo_info, build_project):
         installer is available from https://rustup.rs/
         '''.format(version, rustc_min_version)))
 
-    if not cargo_info:
-        die(dedent('''\
-        Cargo package manager not found.
-        To compile Rust language sources, you must have 'cargo' in your path.
-        See https://www.rust-lang.org/ for more information.
-
-        You can install cargo by running './mach bootstrap'
-        or by directly running the installer from https://rustup.rs/
-        '''))
-
-    version = cargo_info.version
-    if version < cargo_min_version:
-        die(dedent('''\
-        Cargo package manager {} is too old.
-
-        To compile Rust language sources please install at least
-        version {} of 'cargo' and make sure it is first in your path.
-
-        You can verify this by typing 'cargo --version'.
-        ''').format(version, cargo_min_version))
-
     return True
 
 
